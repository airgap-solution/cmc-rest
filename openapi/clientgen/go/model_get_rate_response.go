/*
CoinMarketCap Rest

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cmcrest

import (
	"encoding/json"
	"time"
)

// checks if the GetRateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRateResponse{}

// GetRateResponse struct for GetRateResponse
type GetRateResponse struct {
	Rate *float64 `json:"rate,omitempty"`
	Change24h *float64 `json:"change24h,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	ErrorCode *int32 `json:"error_code,omitempty"`
	ErrorMessage *string `json:"error_message,omitempty"`
}

// NewGetRateResponse instantiates a new GetRateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRateResponse() *GetRateResponse {
	this := GetRateResponse{}
	return &this
}

// NewGetRateResponseWithDefaults instantiates a new GetRateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRateResponseWithDefaults() *GetRateResponse {
	this := GetRateResponse{}
	return &this
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *GetRateResponse) GetRate() float64 {
	if o == nil || IsNil(o.Rate) {
		var ret float64
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRateResponse) GetRateOk() (*float64, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *GetRateResponse) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given float64 and assigns it to the Rate field.
func (o *GetRateResponse) SetRate(v float64) {
	o.Rate = &v
}

// GetChange24h returns the Change24h field value if set, zero value otherwise.
func (o *GetRateResponse) GetChange24h() float64 {
	if o == nil || IsNil(o.Change24h) {
		var ret float64
		return ret
	}
	return *o.Change24h
}

// GetChange24hOk returns a tuple with the Change24h field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRateResponse) GetChange24hOk() (*float64, bool) {
	if o == nil || IsNil(o.Change24h) {
		return nil, false
	}
	return o.Change24h, true
}

// HasChange24h returns a boolean if a field has been set.
func (o *GetRateResponse) HasChange24h() bool {
	if o != nil && !IsNil(o.Change24h) {
		return true
	}

	return false
}

// SetChange24h gets a reference to the given float64 and assigns it to the Change24h field.
func (o *GetRateResponse) SetChange24h(v float64) {
	o.Change24h = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GetRateResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRateResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GetRateResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *GetRateResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *GetRateResponse) GetErrorCode() int32 {
	if o == nil || IsNil(o.ErrorCode) {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRateResponse) GetErrorCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *GetRateResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *GetRateResponse) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *GetRateResponse) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRateResponse) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *GetRateResponse) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *GetRateResponse) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

func (o GetRateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	if !IsNil(o.Change24h) {
		toSerialize["change24h"] = o.Change24h
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["error_code"] = o.ErrorCode
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["error_message"] = o.ErrorMessage
	}
	return toSerialize, nil
}

type NullableGetRateResponse struct {
	value *GetRateResponse
	isSet bool
}

func (v NullableGetRateResponse) Get() *GetRateResponse {
	return v.value
}

func (v *NullableGetRateResponse) Set(val *GetRateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRateResponse(val *GetRateResponse) *NullableGetRateResponse {
	return &NullableGetRateResponse{value: val, isSet: true}
}

func (v NullableGetRateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


